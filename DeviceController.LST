C51 COMPILER V9.54   DEVICECONTROLLER                                                      03/17/2016 08:51:45 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DEVICECONTROLLER
OBJECT MODULE PLACED IN DeviceController.OBJ
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE DeviceController.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "DeviceController.h"
   2          #include "PinDefine.h"
   3          #include "UART.h"
   4          
   5          extern bool shouldMonitorHVStatus;
   6          
   7          void enableLCChannel(char channelCode) {
   8   1        // Switch off all LCR channel first.
   9   1        IO_vResetPin(LC_CHANNEL_1);
  10   1        IO_vResetPin(LC_CHANNEL_2);
  11   1        IO_vResetPin(LC_CHANNEL_3);
  12   1        
  13   1        // Enable coressponding LCR channel GPIO
  14   1        switch(channelCode) {
  15   2          case '0':
  16   2            sendUART("#b#0#\r\n");
  17   2            break;
  18   2          case '1':
  19   2            IO_vSetPin(LC_CHANNEL_1);
  20   2            sendUART("#b#1#\r\n");
  21   2            break;
  22   2          case '2':
  23   2            IO_vSetPin(LC_CHANNEL_2);
  24   2            sendUART("#b#2#\r\n");    
  25   2            break;
  26   2          case '3':
  27   2            IO_vSetPin(LC_CHANNEL_3);
  28   2            sendUART("#b#3#\r\n");
  29   2            break;
  30   2          default:
  31   2            sendUART("Unknown LC Channel.\r\n");      
  32   2            break;
  33   2        }
  34   1      }
  35          
  36          void enableLCRChannel(char channelCode) {
  37   1        // Switch off all LCR channel first.
  38   1        IO_vResetPin(LCR_CHANNEL_1);
  39   1        IO_vResetPin(LCR_CHANNEL_2);
  40   1        IO_vResetPin(LCR_CHANNEL_3);
  41   1        
  42   1        // Enable coressponding LCR channel GPIO
  43   1        switch(channelCode) {
  44   2          case '0':
  45   2            sendUART("#a#0#\r\n");
  46   2            break;
  47   2          case '1':
  48   2            IO_vSetPin(LCR_CHANNEL_1);
  49   2            sendUART("#a#1#\r\n");
  50   2            break;
  51   2          case '2':
  52   2            IO_vSetPin(LCR_CHANNEL_2);
  53   2            sendUART("#a#2#\r\n");    
  54   2            break;
  55   2          case '3':
C51 COMPILER V9.54   DEVICECONTROLLER                                                      03/17/2016 08:51:45 PAGE 2   

  56   2            IO_vSetPin(LCR_CHANNEL_3);
  57   2            sendUART("#a#3#\r\n");
  58   2            break;
  59   2          default:
  60   2            sendUART("Unknown LCR Channel.\r\n");     
  61   2            break;
  62   2        }
  63   1      }
  64          
  65          bool isAllHVRelayOK() {
  66   1        #ifdef STARTER_KIT_EMU
  67   1          return IO_ubReadPin(HV_READY_1);
  68   1        #else
                  return 
                    IO_ubReadPin(HV_READY_1) &&
                    IO_ubReadPin(HV_READY_2) &&
                    IO_ubReadPin(HV_READY_3) &&
                    IO_ubReadPin(HV_FAULT_1) &&
                    IO_ubReadPin(HV_FAULT_2) &&
                    IO_ubReadPin(HV_FAULT_3);
                #endif
  77   1      }
  78          
  79          void sendHVRelayStatus() {
  80   1        if (isAllHVRelayOK()) {
  81   2          sendUART("HV_OK\r\n");
  82   2        } else {
  83   2          sendUART("HV_NG\r\n");    
  84   2        }
  85   1      }
  86          
  87          void setChargeMode(char modeCode) {
  88   1        if (modeCode == '1') {
  89   2          if (!isAllHVRelayOK()) {
  90   3            IO_vResetPin(HV_CHANNEL);     
  91   3            IO_vResetPin(CHARGE_CHANNEL);
  92   3            IO_vResetPin(DISCHARGE_CHANNEL);
  93   3            sendUART("HV_NG\r\n");
  94   3            return;
  95   3          }
  96   2          IO_vResetPin(DISCHARGE_CHANNEL);
  97   2          IO_vSetPin(HV_CHANNEL);
  98   2          IO_vSetPin(CHARGE_CHANNEL);
  99   2          sendUART("#c#1#\r\n");
 100   2        } else if (modeCode == '0') {
 101   2          IO_vResetPin(CHARGE_CHANNEL);
 102   2          IO_vResetPin(HV_CHANNEL);
 103   2          IO_vSetPin(DISCHARGE_CHANNEL);
 104   2          sendUART("#c#0#\r\n");
 105   2        } else {
 106   2          sendUART("Unknown Charge Mode\r\n");    
 107   2        }
 108   1      }
 109          
 110          void setHVMonitorMode(char modeCode) {
 111   1        if (modeCode == '1') {
 112   2          shouldMonitorHVStatus = 1;
 113   2          sendUART("#e#1#\r\n");
 114   2        } else if (modeCode == '0') {
 115   2          shouldMonitorHVStatus = 0;
 116   2          sendUART("#e#0#\r\n");
 117   2        } else {
C51 COMPILER V9.54   DEVICECONTROLLER                                                      03/17/2016 08:51:45 PAGE 3   

 118   2          sendUART("Unknown HV Monitor Code\r\n");
 119   2        }
 120   1        
 121   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    274    ----
   CONSTANT SIZE    =    205    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
