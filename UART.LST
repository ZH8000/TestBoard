C51 COMPILER V9.54   UART                                                                  03/16/2016 16:54:06 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN UART.OBJ
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE UART.C OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          //****************************************************************************
   2          // @Module        UART (Serial Interface)
   3          // @Filename      UART.C
   4          // @Project       TestBoard.dav
   5          //----------------------------------------------------------------------------
   6          // @Controller    Infineon XC888CLM-8FF
   7          //
   8          // @Compiler      Keil
   9          //
  10          // @Codegenerator 1.7
  11          //
  12          // @Description:  This file contains functions that use the UART module.
  13          //
  14          //----------------------------------------------------------------------------
  15          // @Date          2016/3/15 16:17:36
  16          //
  17          //****************************************************************************
  18          
  19          
  20          //****************************************************************************
  21          // @Project Includes
  22          //****************************************************************************
  23          
  24          #include "MAIN.H"
  25          #include "PinDefine.h"
  26          #include "DeviceController.h"
  27          #include <string.h>
  28          #include <stdio.h>
  29          
  30          
  31          
  32          //****************************************************************************
  33          // @Function      void UART_vInit(void) 
  34          //
  35          //----------------------------------------------------------------------------
  36          // @Description   This is the initialization function of the UART function 
  37          //                library. It is assumed that the SFRs used by this library 
  38          //                are in their reset state. 
  39          //                
  40          //                The following SFR fields will be initialized:
  41          //                - register SCON
  42          //                - bits SMOD and ES
  43          //
  44          //----------------------------------------------------------------------------
  45          // @Returnvalue   None
  46          //
  47          //----------------------------------------------------------------------------
  48          // @Parameters    None
  49          //
  50          //----------------------------------------------------------------------------
  51          // @Date          2016/3/15
  52          //
  53          //****************************************************************************
  54          
  55          
C51 COMPILER V9.54   UART                                                                  03/16/2016 16:54:06 PAGE 2   

  56          void UART_vInit(void)
  57          {
  58   1        ///  -----------------------------------------------------------------------
  59   1        ///  UART settings
  60   1        ///  -----------------------------------------------------------------------
  61   1        ///  Pin TXD_1 (P0.2) is selected for transmission
  62   1        ///  Pin RXD_1 (P0.1) is selected for reception
  63   1        ///  Receiver enabled
  64   1        ///  Mode 1: 8-bit data, 1 start bit, 1 stop bit, variable baud rate
  65   1        ///  Receiver interrupt flag RI will only be activated if a valid stop bit 
  66   1        ///  was received
  67   1        ///  BRG is selected for baudrate generation
  68   1      
  69   1        SFR_PAGE(_pp2, noSST);         // switch to page 2 without saving
  70   1        P0_ALTSEL0   &= ~(ubyte)0x04;  // configure alternate function register 0
  71   1        P0_ALTSEL1   |=  (ubyte)0x04;  // configure alternate function register 1
  72   1        SFR_PAGE(_pp0, noSST);         // switch to page 0 without saving
  73   1        P0_DIR       |=  (ubyte)0x04;  // set output direction
  74   1      
  75   1      
  76   1        MODPISEL     |=  (ubyte)0x01;  // configure peripheral input select register
  77   1        BCON          =  0x00;         // reset baudrate timer/reload register
  78   1        SCON          =  0x70;         // load serial channel control register
  79   1      
  80   1        ///  -----------------------------------------------------------------------
  81   1        ///  Baudrate generator settings
  82   1        ///  -----------------------------------------------------------------------
  83   1        ///  input clock = fPCLK
  84   1        ///  Fractional divider is enabled
  85   1        ///  baudrate = 9.6004 kbaud
  86   1      
  87   1        FDSTEP        =  0xD5;         // load fractional divider reload register
  88   1        BG            =  0x81;         // load baudrate timer/reload register
  89   1        FDCON        |=  0x01;         // load Fractional Divider control register
  90   1        BCON         |=  0x01;         // load baud rate control register
  91   1      
  92   1        ///  UART interrupt enabled
  93   1        ES = 1;
  94   1      
  95   1      } //  End of function UART_vInit
  96          
  97          
  98          //****************************************************************************
  99          // @Function      void UART_viIsr(void) 
 100          //
 101          //----------------------------------------------------------------------------
 102          // @Description   This is the service routine for the UART interrupt. It is 
 103          //                called after each transmission (flag TI set) or reception 
 104          //                (flag RI set) of a data unit.
 105          //                Please note that you have to add application specific code 
 106          //                to this function.
 107          //
 108          //----------------------------------------------------------------------------
 109          // @Returnvalue   None
 110          //
 111          //----------------------------------------------------------------------------
 112          // @Parameters    None
 113          //
 114          //----------------------------------------------------------------------------
 115          // @Date          2016/3/15
 116          //
 117          //****************************************************************************
C51 COMPILER V9.54   UART                                                                  03/16/2016 16:54:06 PAGE 3   

 118          
 119          //   You have two choices for interrupt type select in Project Settings Page 
 120          //   under Global Settings Section.
 121          //   If you select CHOICE 1 then ISR will be generated with push and pop.
 122          //   If you select CHOICE 2 then ISR will be generated without push and pop.
 123          //   Default choice is CHOICE 2.
 124          //   Current selection is CHOICE 2 
 125          
 126          static char receiveBuffer[20] = {0};
 127          static int bufferCount = 0;
 128          
 129          void sendUART(char * message) {
 130   1        char * current = message;
 131   1        while (*current != '\0') {
 132   2          SBUF = *current;
 133   2          while (TI == 0);
 134   2          TI = 0;   
 135   2          current++;
 136   2        }
 137   1      }
 138          
 139          void processCommand(char * command) {
 140   1        int commandSize = strlen(command);
 141   1        char respondMessage[20] = {0};
 142   1        memset(respondMessage, 0, 20);
 143   1        if (commandSize != 5 || command[0] != '$' || command[4] != '$') {
 144   2          sendUART("Unknown Command\r\n");
 145   2        } else {
 146   2          switch(command[1]) {
 147   3            case 'a':
 148   3              enableLCRChannel(command[3]);
 149   3              break;
 150   3            case 'b':
 151   3              enableLCChannel(command[3]);
 152   3              break;
 153   3            case 'c':
 154   3              setChargeMode(command[3]);
 155   3              break;
 156   3            case 'd':
 157   3              sendHVRelayStatus();
 158   3              break;
 159   3            default:
 160   3              sendUART("Unknown Command\r\n");
 161   3          }
 162   2        }
 163   1      }
 164          
 165          void UART_viIsr(void) interrupt UARTINT
 166          {
 167   1        // switch to page 0
 168   1        SFR_PAGE(_su0, SST0);
 169   1        if (TI)
 170   1        {
 171   2          TI = 0;
 172   2        }
 173   1        if (RI)
 174   1        {
 175   2          char receiveByte = SBUF;
 176   2          if (receiveByte == '\r' || receiveByte == '\n' || bufferCount >= 18) {
 177   3            processCommand(receiveBuffer);
 178   3            memset(receiveBuffer, 0, 20);     
 179   3            bufferCount = 0;
C51 COMPILER V9.54   UART                                                                  03/16/2016 16:54:06 PAGE 4   

 180   3          } else {
 181   3            receiveBuffer[bufferCount] = receiveByte;
 182   3            bufferCount++;
 183   3          }
 184   2          RI = 0;
 185   2        }
 186   1      
 187   1        // restore the old page
 188   1        SFR_PAGE(_su0, RST0);
 189   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    367    ----
   CONSTANT SIZE    =     38    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22      26
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
